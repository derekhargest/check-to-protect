/**
Why?
----------------------------------------
In CSS3, the :not selector only allows 1 selector as an argument.
Starting from CSS 4 using multiple arguments in the :not() selector
becomes possible.

Reference:
- https://www.w3.org/TR/selectors4/#negation
*/

@mixin multi-not($ignoredItems...) {
	 // if only a single value given
	 @if (length($ignoredItems) == 1){
		 // it is probably a list variable so set ignore list to the variable
		 $ignoredItems: nth($ignoredItems, 1);
	 }

	 // set up an empty $notOutput variable
	 $notOutput: '';

	 // for each item in the list
	 @each $not in $ignoredItems {
		 // generate a :not([ignored_item]) segment for each item in the ignore list and put them back to back
		 $notOutput: $notOutput + ':not(#{$not})';
	 }

	 // output the full :not() rule including all ignored items
	 &#{$notOutput} {
		 @content;
	 }
 }


/**
Option 1: list the ignored items inline
========================================
input {
	// non-ignored styling goes here
	@include multi-not('[type="radio"]', '[type="checkbox"]') {
		// ignored styling goes here
	}
}


Option 2: list the ignored items in a variable first
========================================
$ignoredItems:
	'[type="radio"]',
	'[type="checkbox"]'
;

input {
	// non-ignored styling goes here
	@include multi-not($ignoredItems) {
		// ignored styling goes here
	}
}


Outputted CSS for either option
========================================
input {
	// non-ignored styling goes here
}

input:not([type="radio"]):not([type="checkbox"]) {
	// ignored styling goes here
}
*/
